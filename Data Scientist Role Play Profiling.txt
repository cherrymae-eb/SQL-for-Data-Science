Data Scientist Role Play: Profiling and Analyzing the Yelp Dataset Coursera Worksheet

This is a 2-part assignment. In the first part, you are asked a series of questions that will help you profile and understand the data just like a data scientist would. For this first part of the assignment, you will be assessed both on the correctness of your findings, as well as the code you used to arrive at your answer. You will be graded on how easy your code is to read, so remember to use proper formatting and comments where necessary.

In the second part of the assignment, you are asked to come up with your own inferences and analysis of the data for a particular research question you want to answer. You will be required to prepare the dataset for the analysis you choose to do. As with the first part, you will be graded, in part, on how easy your code is to read, so use proper formatting and comments to illustrate and communicate your intent as required.

For both parts of this assignment, use this "worksheet." It provides all the questions you are being asked, and your job will be to transfer your answers and SQL coding where indicated into this worksheet so that your peers can review your work. You should be able to use any Text Editor (Windows Notepad, Apple TextEdit, Notepad ++, Sublime Text, etc.) to copy and paste your answers. If you are going to use Word or some other page layout application, just be careful to make sure your answers and code are lined appropriately.
In this case, you may want to save as a PDF to ensure your formatting remains intact for you reviewer.



Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:
	
i. Attribute table = 10000 total records

-----------SQL CODE-----------
select count(*)
from Attribute
------------------------------
--------SQL CODE RESULT-------
+----------+
| count(*) |
+----------+
|    10000 |
+----------+
-----------------------------

ii. Business table = 10000 total records

-----------SQL CODE-----------
select count(*)
from Business
------------------------------
--------SQL CODE RESULT-------
+----------+
| count(*) |
+----------+
|    10000 |
+----------+
-----------------------------

iii. Category table = 10000 total records

-----------SQL CODE-----------
select count(*)
from Category
------------------------------
--------SQL CODE RESULT-------
+----------+
| count(*) |
+----------+
|    10000 |
+----------+
-----------------------------

iv. Checkin table = 10000 total records

-----------SQL CODE-----------
select count(*)
from Checkin
------------------------------
--------SQL CODE RESULT-------
+----------+
| count(*) |
+----------+
|    10000 |
+----------+
-----------------------------

v. elite_years table = 10000 total records

-----------SQL CODE-----------
select count(*)
from elite_years
------------------------------
--------SQL CODE RESULT-------
+----------+
| count(*) |
+----------+
|    10000 |
+----------+
-----------------------------

vi. friend table = 10000 total records

-----------SQL CODE-----------
select count(*)
from friend
------------------------------
--------SQL CODE RESULT-------
+----------+
| count(*) |
+----------+
|    10000 |
+----------+
-----------------------------

vii. hours table = 10000 total records

-----------SQL CODE-----------
select count(*)
from hours
------------------------------
--------SQL CODE RESULT-------
+----------+
| count(*) |
+----------+
|    10000 |
+----------+
-----------------------------

viii. photo table = 10000 total records

-----------SQL CODE-----------
select count(*)
from photo
------------------------------
--------SQL CODE RESULT-------
+----------+
| count(*) |
+----------+
|    10000 |
+----------+
-----------------------------

ix. review table = 10000 total records

-----------SQL CODE-----------
select count(*)
from review
------------------------------
--------SQL CODE RESULT-------
+----------+
| count(*) |
+----------+
|    10000 |
+----------+
-----------------------------

x. tip table = 10000 total records

-----------SQL CODE-----------
select count(*)
from tip
------------------------------
--------SQL CODE RESULT-------
+----------+
| count(*) |
+----------+
|    10000 |
+----------+
-----------------------------

xi. user table = 10000 total records

-----------SQL CODE-----------
select count(*)
from user
------------------------------
--------SQL CODE RESULT-------
+----------+
| count(*) |
+----------+
|    10000 |
+----------+
-----------------------------



	


2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

i. Business = 10000

-----------SQL CODE-----------
select count(distinct id)
from business
------------------------------

ii. Hours = 1562

-----------SQL CODE-----------
select count(distinct business_id)
from hours
------------------------------

iii. Category = 2643

-----------SQL CODE-----------
select count(distinct business_id)
from category
------------------------------

iv. Attribute = 1115

-----------SQL CODE-----------
select count(distinct business_id)
from attribute
------------------------------

v. Review = id: 10000 ; business_id: 8090 ; user_id: 9581

-----------SQL CODE-----------
select count(distinct id), count(distinct business_id), count(distinct user_id)
from review
------------------------------

vi. Checkin = 493

-----------SQL CODE-----------
select count(distinct business_id)
from checkin
------------------------------

vii. Photo = id: 10000 ; business_id: 6493

-----------SQL CODE-----------
select count(distinct id), count(distinct business_id)
from photo
------------------------------

viii. Tip = user_id: 537 ; business_id: 3979

-----------SQL CODE-----------
select count(distinct user_id), count(distinct business_id)
from tip
------------------------------

ix. User = 10000

-----------SQL CODE-----------
select count(distinct id)
from user
------------------------------

x. Friend = 11

-----------SQL CODE-----------
select count(distinct user_id)
from friend
------------------------------

xi. Elite_years = 2780

-----------SQL CODE-----------
select count(distinct user_id)
from elite_years
------------------------------

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.	



3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer: NO
	
	
	SQL code used to arrive at answer:
	
	select count(*)
	from user
	where
   		id is null or
    		name is null or
    		review_count is null or
    		yelping_since IS NULL or
    		useful IS NULL or
    		funny IS NULL or
    		cool IS NULL or
    		fans IS NULL or
    		average_stars IS NULL or
    		compliment_hot IS NULL or
    		compliment_more IS NULL or
    		compliment_profile IS NULL or
    		compliment_cute IS NULL or
    		compliment_list IS NULL or
    		compliment_note IS NULL or
    		compliment_plain IS NULL or
    		compliment_cool IS NULL or
    		compliment_funny IS NULL or
    		compliment_writer IS NULL or
    		compliment_photos IS NULL

	
4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

	i. Table: Review, Column: Stars
	
		min: 	1	max:	5	avg: 3.7082
		
	------------------SQL CODE------------------
	select min(stars), max(stars), avg(stars)
	from review
	--------------------------------------------

	ii. Table: Business, Column: Stars
	
		min:	1.0	max:	5.0	avg: 3.6549

	------------------SQL CODE------------------
	select min(stars), max(stars), avg(stars)
	from business
	--------------------------------------------		
	
	iii. Table: Tip, Column: Likes
	
		min:	0	max:	2	avg: 0.0144

	------------------SQL CODE------------------
	select min(stars), max(stars), avg(stars)
	from business
	--------------------------------------------	
	
	iv. Table: Checkin, Column: Count
	
		min:	1	max:	53	avg: 1.9414
		
	------------------SQL CODE------------------
	select min(count), max(count), avg(count)
	from checkin
	--------------------------------------------
	
	v. Table: User, Column: Review_count
	
		min:	0	max:	2000	avg: 24.2995
		
	------------------SQL CODE------------------
	select min(review_count), max(review_count), avg(review_count)
	from user
	--------------------------------------------


5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer:
	
	select city,sum(review_count) as num
	from business
	group by city
	order by num desc
	
	Copy and Paste the Result Below:
	
+-----------------+-------+
| city            |   num |
+-----------------+-------+
| Las Vegas       | 82854 |
| Phoenix         | 34503 |
| Toronto         | 24113 |
| Scottsdale      | 20614 |
| Charlotte       | 12523 |
| Henderson       | 10871 |
| Tempe           | 10504 |
| Pittsburgh      |  9798 |
| Montr√©al        |  9448 |
| Chandler        |  8112 |
| Mesa            |  6875 |
| Gilbert         |  6380 |
| Cleveland       |  5593 |
| Madison         |  5265 |
| Glendale        |  4406 |
| Mississauga     |  3814 |
| Edinburgh       |  2792 |
| Peoria          |  2624 |
| North Las Vegas |  2438 |
| Markham         |  2352 |
| Champaign       |  2029 |
| Stuttgart       |  1849 |
| Surprise        |  1520 |
| Lakewood        |  1465 |
| Goodyear        |  1155 |
+-----------------+-------+
(Output limit exceeded, 25 of 362 total rows shown)

	
6. Find the distribution of star ratings to the business in the following cities:

i. Avon

SQL code used to arrive at answer:

	select sum(review_count) as numbers, stars
	from business
	where city == "Avon"
	group by stars

Copy and Paste the Resulting Table Below (2 columns √¢‚Ç¨‚Äú star rating and count):

+---------+-------+
| numbers | stars |
+---------+-------+
|      10 |   1.5 |
|       6 |   2.5 |
|      88 |   3.5 |
|      21 |   4.0 |
|      31 |   4.5 |
|       3 |   5.0 |
+---------+-------+

ii. Beachwood

SQL code used to arrive at answer:

	select sum(review_count) as numbers, stars
	from business
	where city == "Beachwood"
	group by stars

Copy and Paste the Resulting Table Below (2 columns √¢‚Ç¨‚Äú star rating and count):
		
+---------+-------+
| numbers | stars |
+---------+-------+
|       8 |   2.0 |
|       3 |   2.5 |
|      11 |   3.0 |
|       6 |   3.5 |
|      69 |   4.0 |
|      17 |   4.5 |
|      23 |   5.0 |
+---------+-------+

7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer:
	
		select review_count, name
		from user
		order by review_count desc
		limit 3
		
	Copy and Paste the Result Below:
		
+--------------+--------+
| review_count | name   |
+--------------+--------+
|         2000 | Gerald |
|         1629 | Sara   |
|         1339 | Yuri   |
+--------------+--------+

8. Does posing more reviews correlate with more fans?

	Posing more reviews does not correlate with more fans because based on the data shown below, Amy has the most fans with a total of 503 however, she only received a total of 609 reviews. On the other hand, Yuri received the most reviews with a total of 1339 however, she only has 76 fans.

	Please explain your findings and interpretation of the results:

------------SQL CODE------------
select name, review_count, fans
from user
order by fans desc
--------------------------------

+-----------+--------------+------+
| name      | review_count | fans |
+-----------+--------------+------+
| Amy       |          609 |  503 |
| Mimi      |          968 |  497 |
| Harald    |         1153 |  311 |
| Gerald    |         2000 |  253 |
| Christine |          930 |  173 |
| Lisa      |          813 |  159 |
| Cat       |          377 |  133 |
| William   |         1215 |  126 |
| Fran      |          862 |  124 |
| Lissa     |          834 |  120 |
| Mark      |          861 |  115 |
| Tiffany   |          408 |  111 |
| bernice   |          255 |  105 |
| Roanna    |         1039 |  104 |
| Angela    |          694 |  101 |
| .Hon      |         1246 |  101 |
| Ben       |          307 |   96 |
| Linda     |          584 |   89 |
| Christina |          842 |   85 |
| Jessica   |          220 |   84 |
| Greg      |          408 |   81 |
| Nieves    |          178 |   80 |
| Sui       |          754 |   78 |
| Yuri      |         1339 |   76 |
| Nicole    |          161 |   73 |
+-----------+--------------+------+
(Output limit exceeded, 25 of 10000 total rows shown)
	

9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer:

	Yes, the word "love" is seen in most reviews with a total of 1780 compared to reviews with "hate" that only has a total of 232.
	
	SQL code used to arrive at answer:

		select count(*)
		from review
		where text like "%love%"	

		select count(*)
		from review
		where text like "%hate%"
	

10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:
	
		select name, fans
		from user
		order by fans desc
		limit 10
	
	Copy and Paste the Result Below:

+-----------+------+
| name      | fans |
+-----------+------+
| Amy       |  503 |
| Mimi      |  497 |
| Harald    |  311 |
| Gerald    |  253 |
| Christine |  173 |
| Lisa      |  159 |
| Cat       |  133 |
| William   |  126 |
| Fran      |  124 |
| Lissa     |  120 |
+-----------+------+	
		

Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.

	I chose Las Vegas as my city and Food as the category.
	
i. Do the two groups you chose to analyze have a different distribution of hours?
	
	Yes, the restaurant that has 4-5 star rating opens from 10:00-19:00 every Monday to Saturday whereas, the other restaurant that has a 2-3 star rating opens a bit earlier at 8:00 and closes at 22:00 every Monday to Sunday.

ii. Do the two groups you chose to analyze have a different number of reviews?

	Yes. the restaurant with 4-5 stars has more reviews with a total of 30 compared to the other restaurant with 2-3 stars only has 6 reviews.         
         
iii. Are you able to infer anything from the location data provided between these two groups? Explain.

	No, because the two restaurants are located in different postal codes.

SQL code used for analysis:

--------------------------------------------------------
SELECT
       CASE
       WHEN stars>=4 THEN '4-5 Stars'
       WHEN (stars>=2 AND stars<=3) THEN '2-3 Stars'
       END as rating,

       postal_code,
       review_count,
       hours.hours,
       name,
       neighborhood


FROM business INNER JOIN category
     ON business.id=category.business_id

     INNER JOIN hours
     ON business.id=hours.business_id

WHERE city='Las Vegas'
      AND category = 'Food'
      AND (stars>=4 OR (stars <3 and stars>2))

ORDER BY stars DESC, hours DESC

--------------------------------------------------------

+-----------+-------------+--------------+-----------------------+-----------------------------+--------------+
| rating    | postal_code | review_count | hours                 | name                        | neighborhood |
+-----------+-------------+--------------+-----------------------+-----------------------------+--------------+
| 4-5 Stars | 89123       |           30 | Wednesday|10:00-19:00 | Sweet Ruby Jane Confections | Southeast    |
| 4-5 Stars | 89123       |           30 | Tuesday|10:00-19:00   | Sweet Ruby Jane Confections | Southeast    |
| 4-5 Stars | 89123       |           30 | Thursday|10:00-19:00  | Sweet Ruby Jane Confections | Southeast    |
| 4-5 Stars | 89123       |           30 | Saturday|10:00-19:00  | Sweet Ruby Jane Confections | Southeast    |
| 4-5 Stars | 89123       |           30 | Monday|10:00-19:00    | Sweet Ruby Jane Confections | Southeast    |
| 4-5 Stars | 89123       |           30 | Friday|10:00-19:00    | Sweet Ruby Jane Confections | Southeast    |
| 2-3 Stars | 89121       |            6 | Wednesday|8:00-22:00  | Walgreens                   | Eastside     |
| 2-3 Stars | 89121       |            6 | Tuesday|8:00-22:00    | Walgreens                   | Eastside     |
| 2-3 Stars | 89121       |            6 | Thursday|8:00-22:00   | Walgreens                   | Eastside     |
| 2-3 Stars | 89121       |            6 | Sunday|8:00-22:00     | Walgreens                   | Eastside     |
| 2-3 Stars | 89121       |            6 | Saturday|8:00-22:00   | Walgreens                   | Eastside     |
| 2-3 Stars | 89121       |            6 | Monday|8:00-22:00     | Walgreens                   | Eastside     |
| 2-3 Stars | 89121       |            6 | Friday|8:00-22:00     | Walgreens                   | Eastside     |
+-----------+-------------+--------------+-----------------------+-----------------------------+--------------+		
		
2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.
		
i. Difference 1:
	The businesses that are open are averaging more star rating compared to businesses that are closed. Below is shown the average star rating for open businesses and closed businesses.

	Open: AVG(stars) = 3.67900943396
	Closed: AVG(stars) = 3.52039473684           
         
ii. Difference 2:
	The businesses the are open are averaging far more reviews compared to businesses that are closed. Below is shown the average reviews for open businesses and closed businesses.

	Open: AVG(review_count) = 31.7570754717
	Closed: AVG(review_count) = 23.1980263158        
         
         
SQL code used for analysis:

--------------------------------------------
	SELECT COUNT(DISTINCT(id)),
		AVG(review_count),
		SUM(review_count),
		AVG(stars),
		is_open
	FROM business
	GROUP BY is_open
--------------------------------------------

+---------------------+-------------------+-------------------+---------------+---------+
| COUNT(DISTINCT(id)) | AVG(review_count) | SUM(review_count) |    AVG(stars) | is_open |
+---------------------+-------------------+-------------------+---------------+---------+
|                1520 |     23.1980263158 |             35261 | 3.52039473684 |       0 |
|                8480 |     31.7570754717 |            269300 | 3.67900943396 |       1 |
+---------------------+-------------------+-------------------+---------------+---------+
	
	
3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them, predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These are just a few examples to get you started, so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:
	
i. Indicate the type of analysis you chose to do:

	I analyzes the name and location and how the reviews of the top rated business category compared to others.         
         
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:

	I need the name, city, review count, star rating, and category of the business for this analysis. I chose these data to determine which business category received the top rating and how does it compared to the reviews it received. I also added the name and city of the business to determine how it affects the reviews that the business category receives. As per the data shown, the top rated category is Arabian but, it does not receive the most reviews simply because it is only a restaurant in comparison to the category that received the most reviews which is a market. 
                           
                  
iii. Output of your finished dataset:
         
+-------------------------+------------+---------------+---------------------+---------------------+
| name                    | city       |  avg(b.stars) | avg(b.review_count) | category            |
+-------------------------+------------+---------------+---------------------+---------------------+
| Green Corner Restaurant | Mesa       |           5.0 |               267.0 | Arabian             |
| Taliesin West           | Scottsdale |           4.5 |               223.0 | Architects          |
| Taliesin West           | Scottsdale |           4.5 |               223.0 | Architectural Tours |
| West Side Market        | Cleveland  |           4.5 |               723.0 | Farmers Market      |
| West Side Market        | Cleveland  |           4.5 |               723.0 | Fruits & Veggies    |
| Green Corner Restaurant | Mesa       |           5.0 |               267.0 | Halal               |
| West Side Market        | Cleveland  |           4.5 |               723.0 | Market Stalls       |
| West Side Market        | Cleveland  |           4.5 |               723.0 | Meat Shops          |
| Colossus Greek Taverna  | Oakville   |           4.5 |               161.0 | Mediterranean       |
| Taliesin West           | Scottsdale |           4.5 |               223.0 | Museums             |
| West Side Market        | Cleveland  |           4.5 |               723.0 | Public Markets      |
| Green Corner Restaurant | Mesa       |           4.5 |               198.0 | Salad               |
| West Side Market        | Cleveland  |           4.5 |               723.0 | Seafood Markets     |
| Taliesin West           | Scottsdale |           4.5 |               223.0 | Tours               |
| AAA Phoenix Office      | Phoenix    | 4.16666666667 |       111.666666667 | Travel Services     |
+-------------------------+------------+---------------+---------------------+---------------------+

         
iv. Provide the SQL code you used to create your final dataset:

----------------------------------------
select 
    (b.name), 
    (b.city), 
    avg(b.stars), 
    avg(b.review_count), 
    c.category
from business b inner join category c
on b.id = c.business_id
group by c.category
having avg(b.review_count) > 100 and
avg(b.stars) > 4
-----------------------------------------


